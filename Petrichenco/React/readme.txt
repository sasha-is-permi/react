
84.  Как работать с ESLint

ESLint- похож на jshint, только позволяет работать с react 
и его предпроцесором JSX (JSX- смесь javascript и html)

Нужно деактивировать jshint и установить и активировать ESlint

Сначала: npm init (чтобы создало package.json)
Затем npm install


Все устанавливаем локально.

Если локально устанавливаем (в нашу рабочую папку)
npm install  eslint --save-dev 
в других папках другие проекты на других языках могут быть.

( при глобальной установке:
npm install -g eslint )


Конфигурационный файл:
eslint --init
(Если хотим чтобы для всех проектов был- помещаем в корневую папку)
(берем конфиг. файл с учебного курса- там все правильно настроенно)

Все устанавливаем локально.

Только в нашу папочку с корректировкой в файл package-lock.json:
(добавляется babel и нужный ему компонент composer)
npm install eslint-plugin-babel --save-dev



(Чтобы воспринимался современный javascript:
Если хотим установить глобально
npm install eslint-plugin-babel -g)


npm -l -справка по npm

Плагин для react:
npm install eslint-plugin-react --save-dev

npm install @typescript-eslint/eslint-plugin --save-dev 

Обновление npm
npm install  npm -g

При удалении папки node_modules и package-lock.json:

npm install восстанавливает эти папки согласно package.json
(npm init- создание самого файла package.json)

В терминале набрать:
eslint index.js
После этого ошибки начинают проверяться в файле.

85. Знакомимся с React.js
Стандарты ES6-8

SPA - одностраничные приложения,
изменяют страницу без перезагрузки.

Примеры spa- instagram, facebook
React- модульная структура, ui компоненты
Моздали какую-то кнопку, слайдер- можем потом использовать 
несколько раз.
Компоненты- самодостаточны, независимы.
Не зависят от другого кода.
Например, удалим пару товаров на сайте- все точно так же работает.

Переменные- каждая в своей области видимости.

Удобно переносить из проекта в проект

React в своей работе использует предпроцессор JSX- 
смесь html и javascript
Нативный javacript тоже воспринимается

Внутри react- алгоритм. Он отслеживает какие части приложения изменились.
И обновить только их а не все приложение.
reconsolation algoritm.

Virtual DOM. Легкая копия в которой сначала работаем а потом переносим
изменения на настоящий дом.
Не все свойства есть в виртуальной копии- только нужные.

Дополнительные библиотеки для react
react native - позволяет писать приложения для мобильных
телефонов.

Для виртуальной реальности- react 360 (vr)

Для react- обязательно знание es6, 

Хороший тон- использовать const везде где можно обойтись без let
var нежелательно использовать.
Иммутабельность во избежание ошибок не меняем тип переменной,
её значение.
Сначала объявляем через const, а если выяснится что надо менять
переменную- изменяем на let.
let и const- могут быть использованны только после инициализации.
Видны в блоке кода, ограниченного фигурными скобками.

Стрелочные функции. Не имеют своего контекта this и берут его 
у своего родителя.
Если функция в функции- напишем this:
это получается объект window, поскольку функция потеряла контекст.
Чтобы не было потери контекста- используем мтрелочную функцию.

1) Обычная функция say()
let obj= {
   number : 5,
   sayNumber: function() {
           function say() {console.log(this);}
   } 
         }         

2) Стрелочная функция
let obj= {
   number : 5,
   sayNumber: function() {
          say = () => {console.log(this);}
   } 
         }         

Методы map, filter. 
Перебирают массив и возвращают новый сформированный массив.
Возвращает новый массив в зависимости от callback
функции, которую передаем.

Отфильтруем массив- из старого создадим новый, 
который содержит имена < 5 букв.





